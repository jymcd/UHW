Format for UHW compatible harddrives:

Note: This documentation excludes ACDOSFS (another compatible format)

The first 5 bytes of all UHWFS (The format UHW uses) harddrives should contain "UHWFS" followed by a null byte, a version byte.
Following this immediantly is the root file record table.
Each record is split into 4 parts. The file name, the file type, the data location, and for speed, the data size.

The file name:
	Non-extended ASCII characters between 32 and 126 (most symbols and all alpha-numeric characters)
	Name is ended by a end of text (3)
	
The file type:
	Single byte. Types include:
		01: FILE
		02: DIRECTORY
	
The data location:
	The data location is constructed by reading every byte between the file name and the next byte below 1.
	The last number is added, every other number is multiplied.

The length:
	Read the data location, it's handled the same only after the location.
	
End of Record:
	Every record is ended with a record seperator (30)
	Skipping through records looking for seperators is encouraged if useful.

End of Table:
	The end of the table is designated by a group seperator (29)

Directories:
	Directories are stored in the table as a file with the 02 type. Directories data points to the directory's file table.
	Directories work like linked lists. Pointing to each other with only the top level actually known at the 8th byte.
	
Actual data is seperated. It starts at the byte designated by the location.
Because we know length we don't need a divider (Yes I know, Overflow bait).
Data is parsed AS IS and is useful in this way because of strings and the
"read but don't interpret" nature of the wrapper.

Final: All files should be seperated by a file seperator (28) however, this
is only read in error cases, so in theory it can be anything, but in case of
error on write or corruption it is HIGHLY recommended to include a file
seperator, as the interpreter will continue until it reaches a NULL or a file
seperator. If it reaches a null, it terminates. If it reaches a file seperator,
it recovers what it can and continues reading.