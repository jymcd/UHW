Format for UHW compatible harddrives:

Note: This documentation excludes ACDOSFS (another compatible format)

The first 5 bytes of all UHWFS (The format UHW uses) harddrives should
contain "UHWFS" followed by a null byte, a version byte. Following this immediantly is the file record table.
Each record is split into 3 parts. The file name, the data location,
and for speed, the data size. They are read in that order.

The file name:
	Non-extended ASCII characters between 33 and 126 (most symbols and
	all alpha-numeric characters)
	Name is ended by a 30
	SHOULD NEVER CONTAIN A 0 BYTE: This will end in an IMMEDIATE abort.
	
The data location:
	The data location is constructed by reading every byte between the
		file name and the next negative byte.
	The last number is added, every other number is multiplied.
	SHOULD NEVER CONTAIN A 0 BYTE: This will end in an IMMEDIATE abort.
	SHOULD NEVER START NEGATIVE: This will end in an IMMEDIATE abort.
	LOCATIONS SMALLER THAN 127 WILL BE OFFSET BY 1! ACCOUNT FOR THIS

The length:
	Read the data location, it's handled the same only after the location.
	SAME RESTRICTIONS APPLY. Same results on breaking those restrictions.
	LENGTHS SMALLER THAN 127 WILL BE OFFSET BY 1! ACCOUNT FOR THIS
	
End of Table:
	Marked with a 4 byte after a file seperater.
	
Actual data is seperated. It starts at the byte designated by the location.
Because we know length we don't need a divider (Yes I know, Overflow bait).
Data is parsed AS IS and is useful in this way because of strings and the
"read but don't interpret" nature of the wrapper.

Final: All files should be seperated by a file seperator (28) however, this
is only read in error cases, so in theory it can be anything, but in case of
error on write or corruption it is HIGHLY recommended to include a file
seperator, as the interpreter will continue until it reaches a NULL or a file
seperator. If it reaches a null, it terminates. If it reaches a file seperator,
it recovers what it can and continues reading.